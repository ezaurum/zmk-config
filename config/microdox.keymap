/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV    1
#define MOUSE  2
#define MEDIA  3
#define SYM    4
#define NUM    5
#define FUNC   6

/ {

behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;  
           // hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;    // <---[[right-hand keys]]
        };
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            //hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
              // <---[[left-hand keys]]
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | TAB | SPC | ESC |   | ENT | BKSP  | DEL |
                        bindings = <
   &kp Q       &kp W       &kp E       &kp R         &kp T            &kp Y        &kp U               &kp I         &kp O       &kp P
   &lh_pht LGUI A  &lh_pht LALT S  &lh_pht LCTRL D &lh_pht LSHIFT F  &kp G            &kp H        &rh_pht RSHIFT J        &rh_pht RCTRL K   &rh_pht RALT L  &rh_pht RGUI SEMI
   &kp Z       &kp X       &kp C       &kp V         &kp B            &kp N        &kp M               &kp COMMA     &kp DOT     &kp FSLH
                        &lt MEDIA TAB  &lt NAV SPC   &lt MOUSE ESC    &lt SYM ENTER  &lt NUM BACKSPACE   &lt FUNC DEL
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME | BKSP | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | UP   | DOWN| RGT  |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
    &trans      &trans    &trans      &trans      &bt BT_CLR       &kp K_REDO   &kp K_PASTE    &kp K_COPY   &kp K_CUT  &kp K_UNDO
    &kp LGUI    &kp LALT  &kp LCTRL   &kp LSHIFT  &bt BT_SEL 0     &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT  &kp SQT
    &trans      &trans    &trans      &trans      &bt BT_SEL 1     &kp INS      &kp HOME       &kp PGDN     &kp PGUP   &kp END
                                      &trans   &trans    &trans    &kp ENTER    &kp BACKSPACE  &kp DEL
                        >;
                };
                mouse_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME | BKSP | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | UP   | DOWN| RGT  |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
    &trans      &trans    &trans      &trans      &bt BT_CLR       &kp K_REDO   &kp K_PASTE    &kp K_COPY   &kp K_CUT  &kp K_UNDO
    &kp LGUI    &kp LALT  &kp LCTRL   &kp LSHIFT  &bt BT_SEL 0     &kp CAPSLOCK &kp LEFT       &kp DOWN     &kp UP     &kp RIGHT
    &trans      &trans    &trans      &trans      &bt BT_SEL 1     &kp INS     &kp HOME       &kp PGDN     &kp PGUP   &kp END
                                      &trans   &trans    &trans    &kp ENTER    &kp BACKSPACE  &kp DEL
                        >;
                };
                media_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME | BKSP | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | UP   | DOWN| RGT  |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
    &trans      &trans    &trans      &trans      &trans     &trans      &trans    &trans        &trans        &trans
    &kp LGUI    &kp LALT  &kp LCTRL   &kp LSHIFT  &trans     &trans      &kp C_RW  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_FF
    &trans      &trans    &trans      &trans      &trans     &trans      &trans    &trans        &trans        &trans
                          &trans      &trans      &trans     &kp C_STOP  &kp C_PP  &kp C_MUTE
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LBKT  &kp RBKT     &trans &trans    &trans    &trans    &trans
       &kp COLON  &kp DLLR  &kp PRCNT        &kp MINUS &kp PLUS     &trans &kp LGUI  &kp LALT  &kp LCTRL &kp LSHIFT
       &kp EQUAL  &kp EXCL  &kp AT           &kp HASH  &kp PIPE     &trans &trans    &trans    &trans    &trans
                       &kp LPAR &kp RPAR  &kp UNDER     &trans   &trans   &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &kp LBKT  &kp N7  &kp N8 &kp N9 &kp RBKT    &trans &trans    &trans    &trans    &trans
   &kp SEMI  &kp N4  &kp N5 &kp N6 &kp EQUAL   &trans &kp LGUI  &kp LALT  &kp LCTRL &kp LSHIFT
   &kp GRAVE &kp N1  &kp N2 &kp N3 &kp BSLH    &trans &trans    &trans    &trans    &trans
                 &kp DOT &kp N0 &kp MINUS      &trans &trans &trans
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
   &kp F12  &kp F7  &kp F8 &kp F9 &kp PSCRN        &trans &trans    &trans    &trans    &trans
   &kp F11  &kp F4  &kp F5 &kp F6 &kp SCROLLLOCK   &trans &kp LGUI  &kp LALT  &kp LCTRL &kp LSHIFT
   &kp F10  &kp F1  &kp F2 &kp F3 &kp PAUSE_BREAK  &trans &trans    &trans    &trans    &trans
                 &kp K_CMENU &kp SPACE &kp TAB     &trans &trans &trans
                        >;
                };
        };
};
